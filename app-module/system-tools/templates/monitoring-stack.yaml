apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-stack
  namespace: argocd
spec:
  project: system-tools
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  sources:
    - repoURL: https://github.com/prometheus-community/helm-charts.git
      targetRevision: kube-prometheus-stack-65.5.0
      path: charts/kube-prometheus-stack
      helm:
        values: |
          global:
            imagePullSecrets:
              - name: "regcred-secret"
          commonLabels:
            environment: "production"

          grafana:
            ingress:
              enabled: true
              ingressClassName: {{ .Values.grafana.ingressClass }}
              annotations:
                cert-manager.io/cluster-issuer: "prod-certmanager"
                acme.cert-manager.io/http01-edit-in-place: "true"
                nginx.ingress.kubernetes.io/auth-type: basic
                nginx.ingress.kubernetes.io/auth-secret: none
              hosts:
                - "grafana.{{ .Values.internalDomainName }}"  
              tls:
                - secretName: "monitoring-tls"
                  hosts:
                    - "grafana.{{ .Values.internalDomainName }}"
            persistence:
              enabled: true
              size: 10Gi

          additionalDataSources:
            - name: "loki"
              type: "loki"
              access: "proxy"
              url: "http://loki.monitoring.svc.cluster.local:3100"
              version: "1"
          
          prometheus:
            prometheusSpec:
              additionalScrapeConfigs:
                - job_name: "otel_collector"
                  scrape_interval: "10s"
                  static_configs:
                    - targets:
                        - "opentelemetry-collector.opentelemetry:9100"
                        - "opentelemetry-collector.opentelemetry:8888"
              storageSpec:
                volumeClainTemplate:
                  spec:
                    resources:
                      requests:
                        storage: 100Gi
              retention: 365d

          alertmanager:
            enabled: true

          kubeEtcd:
            enabled: false
          
          kubeControllerManager:
            enabled: false

          kubeScheduler:
            enabled: false

    - repoURL: https://github.com/prometheus-community/helm-charts.git
      targetRevision: prometheus-adapter-4.11.0
      path: charts/prometheus-adapter
      helm:
        values: |
          resources:
            cpu: "10m"
            memory: "32Mi"
          prometheus:
            url: http://"kube-prometheus-stack-prometheus.monitoring.svc"

    - repoURL: https://github.com/grafana/helm-charts.git
      targetRevision: loki-stack-2.10.2
      path: charts/loki-stack
      helm:
        values: |
          loki:
            serviceAccount:
              name: loki
              create: true
              annotations:
                eks.amazonaws.com/role-arn: {{ .Values.loki.roleArn }}

            extraArgs:
              target: all,table-manager

            config:
              schema_config:
                configs:
                  - from: "2024-01-01"
                    store: "aws"
                    object_store: "s3"
                    schema: "v11"
                    index:
                      prefix: "{{ .Values.clusterName }}-loki-index-"
                      period: "8904h"

              storage_config:
                aws:
                  s3: "s3://{{ .Values.awsRegion }}/{{ .Values.loki.bucketName }}"
                  s3forcepathstyle: true
                  bucketnames: {{ .Values.loki.bucketName }}
                  region: {{ .Values.awsRegion }}
                  insecure: false
                  sse_encryption: true

                  dynamodb:
                    dynamodb_url: "dynamodb://{{ .Values.awsRegion }}"

              table_manager:
                retention_deletes_enabled: true
                retention_period: "8904h"

          promtail:
            tolerations:
            - key: "fpga"
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true