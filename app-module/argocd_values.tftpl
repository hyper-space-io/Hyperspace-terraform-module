dex:
  enabled: ${dex_enabled}

configs:
  cm:
    url: https://argocd.${domain}
    dex.config: |
      connectors:
      %{~ for connector in dex_connectors }
      - type: ${connector.type}
        id: ${connector.id}
        name: ${connector.name}
        config:
        %{~ for key, value in connector.config }
          %{~ if key == "orgs" }
          ${key}: 
          %{~ for org in split(",", value) }
            - ${tostring(trim(org, " "))}
          %{~ endfor }
          %{~ else }
          ${key}: ${value}
          %{~ endif }
        %{~ endfor }
      %{~ endfor }

  rbac:
    policy.default: ${rbac_policy_default}
    policy.csv: |
      %{~ for rule in rbac_policy_rules }
      ${rule}
      %{~ endfor }

%{ if enable_high_availability }
redis-ha:
  enabled: true

controller:
  replicas: 1

server:
  autoscaling:
    enabled: true
    minReplicas: 2

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 2

applicationSet:
  replicas: 2
%{ else }
server:
  autoscaling:
    enabled: false
%{ endif }

server:
  extraArgs:
    - --insecure
  ingress:
    enabled: ${ingress_enabled}
    ingressClassName: ${ingress_class}
    hostname: argocd.${domain}
    https: false
# test